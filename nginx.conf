user  root root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    root /usr/share/gitweb;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    server {
        listen       80;
        server_name  localhost;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # static repo files for cloning over https
        location ~ ^.*\.git/objects/([0-9a-f]+/[0-9a-f]+|pack/pack-[0-9a-f]+.(pack|idx))$ {
            root /git/;
        }

        # requests that need to go to git-http-backend
        location ~ ^.*\.git/(HEAD|info/refs|objects/info/.*|git-(upload|receive)-pack)$ {
            root /git;

            fastcgi_pass unix:/var/run/fcgiwrap.sock;
            fastcgi_param SCRIPT_FILENAME   /usr/libexec/git-core/git-http-backend;
            fastcgi_param PATH_INFO         $uri;
            fastcgi_param GIT_PROJECT_ROOT  /git;
            fastcgi_param GIT_HTTP_EXPORT_ALL "";
            fastcgi_param REMOTE_USER $remote_user;
            include fastcgi_params;
        }

        try_files $uri @gitweb;
        location @gitweb {
            include fastcgi_params;
            gzip off;
            fastcgi_param   SCRIPT_FILENAME /usr/share/gitweb/gitweb.cgi;
            fastcgi_param   GITWEB_CONFIG   /etc/gitweb.conf;
            fastcgi_param   PATH_INFO       $uri;
            fastcgi_pass    unix:/var/run/fcgiwrap.sock;
        }
    }

}
